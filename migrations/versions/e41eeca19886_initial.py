"""initial

Revision ID: e41eeca19886
Revises: 
Create Date: 2024-05-23 16:57:14.912004

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e41eeca19886'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('administration_routes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('description')
    )
    op.create_table('customers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=256), nullable=False),
    sa.Column('phone_number', sa.String(length=32), nullable=False),
    sa.Column('address', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('full_name', 'phone_number', 'address')
    )
    op.create_table('doctors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('full_name')
    )
    op.create_table('drug_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('cookable', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('lab_workers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('full_name')
    )
    op.create_table('mixture_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('patients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=256), nullable=False),
    sa.Column('birthday', sa.Date(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('full_name', 'birthday')
    )
    op.create_table('suppliers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('phone_number', sa.String(length=32), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'phone_number')
    )
    op.create_table('drug_types_administration_routes',
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.Column('route_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['route_id'], ['administration_routes.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['drug_types.id'], ),
    sa.PrimaryKeyConstraint('type_id', 'route_id')
    )
    op.create_table('drugs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('cost', sa.Integer(), nullable=False),
    sa.Column('shelf_life', sa.Integer(), nullable=False),
    sa.Column('critical_amount', sa.Integer(), nullable=False),
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=False),
    sa.CheckConstraint('cost > 0'),
    sa.CheckConstraint('critical_amount >= 0'),
    sa.CheckConstraint('shelf_life > 0'),
    sa.ForeignKeyConstraint(['type_id'], ['drug_types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('prescriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('diagnosis', sa.String(length=512), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mixtures',
    sa.Column('drug_id', sa.Integer(), nullable=False),
    sa.Column('solvent', sa.String(length=256), nullable=False),
    sa.Column('mixture_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['drug_id'], ['drugs.id'], ),
    sa.ForeignKeyConstraint(['mixture_type_id'], ['mixture_types.id'], ),
    sa.PrimaryKeyConstraint('drug_id')
    )
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('prescription_id', sa.Integer(), nullable=False),
    sa.Column('registration_datetime', sa.DateTime(), nullable=False),
    sa.Column('appointed_datetime', sa.DateTime(), nullable=True),
    sa.Column('obtaining_datetime', sa.DateTime(), nullable=True),
    sa.Column('paid', sa.Boolean(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['prescription_id'], ['prescriptions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orders_waiting_drug_supplies',
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('drug_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.CheckConstraint('amount > 0'),
    sa.ForeignKeyConstraint(['drug_id'], ['drugs.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['prescriptions.id'], ),
    sa.PrimaryKeyConstraint('order_id', 'drug_id')
    )
    op.create_table('pills',
    sa.Column('drug_id', sa.Integer(), nullable=False),
    sa.Column('weight_of_pill', sa.Integer(), nullable=False),
    sa.Column('pills_count', sa.Integer(), nullable=False),
    sa.CheckConstraint('pills_count > 0'),
    sa.CheckConstraint('weight_of_pill > 0'),
    sa.ForeignKeyConstraint(['drug_id'], ['drugs.id'], ),
    sa.PrimaryKeyConstraint('drug_id')
    )
    op.create_table('powders',
    sa.Column('drug_id', sa.Integer(), nullable=False),
    sa.Column('composite', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['drug_id'], ['drugs.id'], ),
    sa.PrimaryKeyConstraint('drug_id')
    )
    op.create_table('prescriptions_content',
    sa.Column('prescription_id', sa.Integer(), nullable=False),
    sa.Column('drug_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('administration_route_id', sa.Integer(), nullable=False),
    sa.CheckConstraint('amount > 0'),
    sa.ForeignKeyConstraint(['administration_route_id'], ['administration_routes.id'], ),
    sa.ForeignKeyConstraint(['drug_id'], ['drugs.id'], ),
    sa.ForeignKeyConstraint(['prescription_id'], ['prescriptions.id'], ),
    sa.PrimaryKeyConstraint('prescription_id', 'drug_id', 'administration_route_id')
    )
    op.create_table('salves',
    sa.Column('drug_id', sa.Integer(), nullable=False),
    sa.Column('active_substance', sa.String(length=256), nullable=False),
    sa.ForeignKeyConstraint(['drug_id'], ['drugs.id'], ),
    sa.PrimaryKeyConstraint('drug_id')
    )
    op.create_table('solutions',
    sa.Column('drug_id', sa.Integer(), nullable=False),
    sa.Column('dosage', sa.Integer(), nullable=False),
    sa.CheckConstraint('(0 <= dosage) and (dosage <= 100)'),
    sa.ForeignKeyConstraint(['drug_id'], ['drugs.id'], ),
    sa.PrimaryKeyConstraint('drug_id')
    )
    op.create_table('storage_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('drug_id', sa.Integer(), nullable=False),
    sa.Column('available_amount', sa.Integer(), nullable=False),
    sa.Column('original_amount', sa.Integer(), nullable=False),
    sa.Column('receipt_datetime', sa.DateTime(), nullable=False),
    sa.CheckConstraint('available_amount >= 0'),
    sa.CheckConstraint('original_amount > 0'),
    sa.ForeignKeyConstraint(['drug_id'], ['drugs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('supplies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('drug_id', sa.Integer(), nullable=False),
    sa.Column('drug_amount', sa.Integer(), nullable=False),
    sa.Column('cost', sa.Integer(), nullable=False),
    sa.Column('assigned_datetime', sa.DateTime(), nullable=False),
    sa.Column('delivery_datetime', sa.DateTime(), nullable=True),
    sa.Column('supplier_id', sa.Integer(), nullable=False),
    sa.CheckConstraint('cost >= 0'),
    sa.CheckConstraint('drug_amount > 0'),
    sa.ForeignKeyConstraint(['drug_id'], ['drugs.id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('technologies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('drug_id', sa.Integer(), nullable=False),
    sa.Column('cooking_time', sa.Time(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=False),
    sa.CheckConstraint('amount > 0'),
    sa.ForeignKeyConstraint(['drug_id'], ['drugs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tinctures',
    sa.Column('drug_id', sa.Integer(), nullable=False),
    sa.Column('material', sa.String(length=256), nullable=False),
    sa.ForeignKeyConstraint(['drug_id'], ['drugs.id'], ),
    sa.PrimaryKeyConstraint('drug_id')
    )
    op.create_table('production',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('technology_id', sa.Integer(), nullable=False),
    sa.Column('drug_amount', sa.Integer(), nullable=False),
    sa.Column('start', sa.DateTime(), nullable=True),
    sa.Column('end', sa.DateTime(), nullable=True),
    sa.CheckConstraint('((start is null) and (end is null)) or (end is null) or (end >= start)'),
    sa.CheckConstraint('drug_amount > 0'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['technology_id'], ['technologies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reserved_drugs',
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('storage_item_id', sa.Integer(), nullable=False),
    sa.Column('drug_amount', sa.Integer(), nullable=False),
    sa.CheckConstraint('drug_amount > 0'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['storage_item_id'], ['storage_items.id'], ),
    sa.PrimaryKeyConstraint('order_id', 'storage_item_id')
    )
    op.create_table('technology_components',
    sa.Column('technology_id', sa.Integer(), nullable=False),
    sa.Column('component_id', sa.Integer(), nullable=False),
    sa.Column('component_amount', sa.Integer(), nullable=False),
    sa.CheckConstraint('component_amount > 0'),
    sa.ForeignKeyConstraint(['component_id'], ['drugs.id'], ),
    sa.ForeignKeyConstraint(['technology_id'], ['technologies.id'], ),
    sa.PrimaryKeyConstraint('technology_id', 'component_id')
    )
    op.create_table('production_lab_workers',
    sa.Column('production_id', sa.Integer(), nullable=False),
    sa.Column('lab_worker_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['lab_worker_id'], ['lab_workers.id'], ),
    sa.ForeignKeyConstraint(['production_id'], ['production.id'], ),
    sa.PrimaryKeyConstraint('production_id', 'lab_worker_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('production_lab_workers')
    op.drop_table('technology_components')
    op.drop_table('reserved_drugs')
    op.drop_table('production')
    op.drop_table('tinctures')
    op.drop_table('technologies')
    op.drop_table('supplies')
    op.drop_table('storage_items')
    op.drop_table('solutions')
    op.drop_table('salves')
    op.drop_table('prescriptions_content')
    op.drop_table('powders')
    op.drop_table('pills')
    op.drop_table('orders_waiting_drug_supplies')
    op.drop_table('orders')
    op.drop_table('mixtures')
    op.drop_table('prescriptions')
    op.drop_table('drugs')
    op.drop_table('drug_types_administration_routes')
    op.drop_table('suppliers')
    op.drop_table('patients')
    op.drop_table('mixture_types')
    op.drop_table('lab_workers')
    op.drop_table('drug_types')
    op.drop_table('doctors')
    op.drop_table('customers')
    op.drop_table('administration_routes')
    # ### end Alembic commands ###
